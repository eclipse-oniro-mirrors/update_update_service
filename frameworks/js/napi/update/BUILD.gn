# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../updateengine.gni")
import("../session/update_session.gni")

ohos_shared_library("$updateengine_client_library_name") {
  sources = []
  if (ability_ability_runtime_enable) {
    sources += [
      "$updateengine_root_path/frameworks/js/napi/update/common/src/client_helper.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/common/src/iupdater.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/define_property.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/local_updater.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/restorer.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/session_manager.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/update_client.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/update_module.cpp",
      "$updateengine_root_path/frameworks/js/napi/update/src/update_session.cpp",
    ]
    sources += session_sources
  }

  include_dirs = [
    "$updateengine_root_path/frameworks/js/napi/update/common/include",
    "$updateengine_root_path/frameworks/js/napi/update/include",
  ]
  include_dirs += session_include_dirs

  deps = [
    "$updateengine_root_path/foundations:update_foundations",
    "$updateengine_root_path/interfaces/inner_api/engine:$updateengine_inner_library_name",
  ]

  external_deps = [
    "c_utils:utils",  # sptr
    "eventhandler:libeventhandler",
    "hilog:libhilog",
  ]

  if (ability_ability_runtime_enable) {
    external_deps += [ "napi:ace_napi" ]
  }

  install_enable = true
  relative_install_dir = "module"
  part_name = "$updateengine_part_name"
  subsystem_name = "updater"

  cflags = [
    "-fPIC",
    "-Os",
    "-Werror",
    "-DNAPI_VERSION=8",
  ]
}
